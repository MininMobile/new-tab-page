@import url('https://fonts.googleapis.com/css?family=Open+Sans');

body::before {
	content: "";
	background: var(--wallpaper) center / cover;
	filter: blur(var(--blur));
	z-index: -9001;
	position: absolute;
	left: calc(var(--blur) * 2 * -1);
	top: calc(var(--blur) * 2 * -1);;
	width: calc(100vw + var(--blur) * 4);
	height: calc(100vh + var(--blur) * 4);
}

* { font-family: "Open Sans", sans-serif; }

body {
	width: 100vw;
	height: 100vh;
	padding: 0;
	margin: 0;
	overflow: hidden;
	display: flex;
	flex-direction: column;
	align-items: center;
	justify-content: center;
}

.wrapper {
	display: flex;
	flex-direction: column;
	align-items: center;
	justify-content: center;
}


/* icons */


.icon::before {
	content: "";
	background: var(--text-color);
	width: 80%;
	height: 80%;
	display: block;
	border-radius: 50%;
	position: relative;
	left: 10%;
	top: 10%;
}

.icon.github::before { mask: url("img/github.png") center / contain no-repeat; -webkit-mask: url("img/github.png") center / contain no-repeat; }
.icon.youtube::before { mask: url("img/youtube.png") center / contain no-repeat; -webkit-mask: url("img/youtube.png") center / contain no-repeat; }
.icon.reddit::before { mask: url("img/reddit.png") center / contain no-repeat; -webkit-mask: url("img/reddit.png") center / contain no-repeat; }
.icon.trello::before { mask: url("img/trello.png") center / contain no-repeat; -webkit-mask: url("img/trello.png") center / contain no-repeat; }
.icon.images::before { mask: url("img/images.png") center / contain no-repeat; -webkit-mask: url("img/images.png") center / contain no-repeat; }
.icon.website::before { mask: url("img/website.png") center / contain no-repeat; -webkit-mask: url("img/website.png") center / contain no-repeat; }


/* shortcuts */


.shortcuts a {
	width: var(--scale);
	height: var(--scale);
	margin: 0 calc(var(--spacing) / 2);
	background: var(--color);
	transition: top var(--trans-props-shorts), background var(--trans-time);
	display: inline-block;
	border-radius: var(--scale);
}

.shortcuts a:hover {
	background: var(--color-hover);
}

.shortcuts:not(.invert) a:first-child, .shortcuts:not(.invert) a:last-child {
	position: relative;
	top: calc(var(--scale) / 2);
}

.shortcuts.invert a:first-child, .shortcuts.invert a:last-child {
	position: relative;
	top: calc(var(--scale) * -1 / 2);
}

.wrapper:hover .shortcuts a, .wrapper.focus .shortcuts a {
	top: 0;
}


/* search box */


.container {
	width: var(--scale);
	margin: var(--spacing) 0 calc(var(--spacing) + var(--spacing) / 2) 0;
	transition: width var(--trans-props);
	display: flex;
	align-items: center;
	justify-content: center;
}

.wrapper:hover .container, .wrapper.focus .container {
	width: var(--search-width);
}

.wrapper:hover .container .search, .wrapper.focus .container .search {
	padding-right: calc(var(--scale) / 2);
}

.search {
	width: 100%;
	height: var(--scale);
	transition: padding-right var(--trans-props);
}

.search::before {
	content: "pp";
	width: var(--scale);
	height: var(--scale);
	color: var(--text-color);
	opacity: 1;
	transition: opacity calc(var(--trans-time) / 2) ease-in-out;
	position: absolute;
	display: flex;
	align-items: center;
	justify-content: center;
}

.wrapper:hover .search::before, .wrapper.focus .search::before {
	opacity: 0;
}

.search input {
	width: 100%;
	height: 100%;
	color: transparent;
	background: var(--color);
	font-size: 1em;
	border: none;
	border-radius: var(--scale);
	outline: none;
	transition: padding-left var(--trans-props), var(--trans-props);
}

.wrapper:hover .container .search input, .wrapper.focus .container .search input {
	color: var(--text-color);
	padding-left: calc(var(--scale) / 2);
}
